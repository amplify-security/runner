---
name: CI

"on":
  pull_request:
  push:
    branches: ["main"]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

permissions:
  contents: read
  # For Github OIDC integration tests:
  id-token: write

jobs:
  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - run: rustup --version
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
      - run: cargo fmt --all -- --check

  clippy:
    runs-on: ubuntu-latest
    steps:
      - run: rustup --version
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
      - name: Check for common mistakes with Clippy
        run: cargo clippy --all-targets --all-features -- -Dclippy::all

  typos:
    runs-on: ubuntu-latest
    steps:
      - run: rustup --version
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
      - name: Check source for typos and spelling issues
        uses: crate-ci/typos@b1a1ef3893ff35ade0cfa71523852a49bfd05d19  # v1.31.1

  cargo_audit:
    runs-on: ubuntu-latest
    steps:
      - run: rustup --version
      - uses: Swatinem/rust-cache@9d47c6ad4b02e050fd481d890b2ea34778fd09d6  # v2.7.8
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
      - name: Install cargo-audit
        run: cargo install cargo-audit
      - name: Check for security advisories
        run: cargo audit

  test:
    runs-on: ubuntu-latest
    steps:
      - run: rustup --version
      - name: Cache Cargo registry and dependencies
        uses: Swatinem/rust-cache@9d47c6ad4b02e050fd481d890b2ea34778fd09d6  # v2.7.8
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
      - name: cargo generate-lockfile
        if: hashFiles('Cargo.lock') == ''
        run: cargo generate-lockfile
      - name: cargo test --locked
        run: cargo test --locked --all-features

  amplify-integration-test:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    env:
      TEST_TAG: "amplifysecurity/runner:test-${{ github.sha }}"
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
      - uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2  # v3.10.0
      - uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4  # v6.15.0
        with:
          context: .
          load: true
          tags: ${{ env.TEST_TAG }}
          network: host
      - name: Run Amplify Security Scan (Lab)
        run: |
          docker run --rm \
          -v $GITHUB_WORKSPACE:$GITHUB_WORKSPACE -w $GITHUB_WORKSPACE \
          -v $GITHUB_EVENT_PATH:$GITHUB_EVENT_PATH \
          -e AMPLIFY_ENDPOINT=https://api.lab.amplify.security \
          -e RUST_BACKTRACE=full \
          --env-file <(env | grep -P 'ACTIONS|GITHUB') \
          ${{ env.TEST_TAG }}
